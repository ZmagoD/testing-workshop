'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _express = require('express');var _express2 = _interopRequireDefault(_express);
var _mongoose = require('mongoose');var _mongoose2 = _interopRequireDefault(_mongoose);
var _auth = require('../auth');var _auth2 = _interopRequireDefault(_auth);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}exports.default =

getProfilesRouter;

function getProfilesRouter() {
  const router = _express2.default.Router();
  const User = _mongoose2.default.model('User');

  // Preload article objects on routes with ':username'
  router.param('username', (req, res, next, username) => {
    User.findOne({ username }).
    then(user => {
      if (!user) {
        return res.sendStatus(404);
      }

      req.profile = user;

      return next();
    }).
    catch(next);
  });

  router.get('/:username', _auth2.default.optional, (req, res) => {
    if (req.payload) {
      User.findById(req.payload.id).then(user => {
        if (!user) {
          return res.json({ profile: req.profile.toProfileJSONFor(false) });
        }

        return res.json({ profile: req.profile.toProfileJSONFor(user) });
      });
    } else {
      return res.json({ profile: req.profile.toProfileJSONFor(false) });
    }
  });

  router.post('/:username/follow', _auth2.default.required, (req, res, next) => {
    const profileId = req.profile._id;

    User.findById(req.payload.id).
    then(user => {
      if (!user) {
        return res.sendStatus(401);
      }

      return user.follow(profileId).then(() => {
        return res.json({ profile: req.profile.toProfileJSONFor(user) });
      });
    }).
    catch(next);
  });

  router.delete('/:username/follow', _auth2.default.required, (req, res, next) => {
    const profileId = req.profile._id;

    User.findById(req.payload.id).
    then(user => {
      if (!user) {
        return res.sendStatus(401);
      }

      return user.unfollow(profileId).then(() => {
        return res.json({ profile: req.profile.toProfileJSONFor(user) });
      });
    }).
    catch(next);
  });

  return router;
}