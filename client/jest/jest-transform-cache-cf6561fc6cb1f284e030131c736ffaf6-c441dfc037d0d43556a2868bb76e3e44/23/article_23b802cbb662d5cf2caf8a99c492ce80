/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var cov_kpa4ff5wv = function () {var path = '/Users/zmagodevetak/Desktop/react/testing-workshop/client/src/reducers/article.js',hash = 'ec42b6b889910e46c8ce834681cfeae62aefaa23',global = new Function('return this')(),gcv = '__coverage__',coverageData = { path: '/Users/zmagodevetak/Desktop/react/testing-workshop/client/src/reducers/article.js', statementMap: { '0': { start: { line: 2, column: 2 }, end: { line: 32, column: 3 } }, '1': { start: { line: 4, column: 6 }, end: { line: 8, column: 7 } }, '2': { start: { line: 11, column: 6 }, end: { line: 11, column: 15 } }, '3': { start: { line: 14, column: 6 }, end: { line: 20, column: 7 } }, '4': { start: { line: 23, column: 24 }, end: { line: 23, column: 40 } }, '5': { start: { line: 24, column: 6 }, end: { line: 27, column: 7 } }, '6': { start: { line: 26, column: 51 }, end: { line: 26, column: 75 } }, '7': { start: { line: 30, column: 6 }, end: { line: 30, column: 18 } } }, fnMap: { '0': { name: '(anonymous_0)', decl: { start: { line: 1, column: 15 }, end: { line: 1, column: 16 } }, loc: { start: { line: 1, column: 39 }, end: { line: 33, column: 1 } }, line: 1 }, '1': { name: '(anonymous_1)', decl: { start: { line: 26, column: 40 }, end: { line: 26, column: 41 } }, loc: { start: { line: 26, column: 51 }, end: { line: 26, column: 75 } }, line: 26 } }, branchMap: { '0': { loc: { start: { line: 1, column: 16 }, end: { line: 1, column: 26 } }, type: 'default-arg', locations: [{ start: { line: 1, column: 24 }, end: { line: 1, column: 26 } }], line: 1 }, '1': { loc: { start: { line: 2, column: 2 }, end: { line: 32, column: 3 } }, type: 'switch', locations: [{ start: { line: 3, column: 4 }, end: { line: 9, column: 5 } }, { start: { line: 10, column: 4 }, end: { line: 12, column: 5 } }, { start: { line: 13, column: 4 }, end: { line: 21, column: 5 } }, { start: { line: 22, column: 4 }, end: { line: 28, column: 5 } }, { start: { line: 29, column: 4 }, end: { line: 31, column: 5 } }], line: 2 }, '2': { loc: { start: { line: 16, column: 23 }, end: { line: 16, column: 66 } }, type: 'cond-expr', locations: [{ start: { line: 16, column: 38 }, end: { line: 16, column: 59 } }, { start: { line: 16, column: 62 }, end: { line: 16, column: 66 } }], line: 16 }, '3': { loc: { start: { line: 17, column: 18 }, end: { line: 19, column: 65 } }, type: 'cond-expr', locations: [{ start: { line: 18, column: 10 }, end: { line: 18, column: 14 } }, { start: { line: 19, column: 10 }, end: { line: 19, column: 65 } }], line: 17 }, '4': { loc: { start: { line: 19, column: 11 }, end: { line: 19, column: 31 } }, type: 'binary-expr', locations: [{ start: { line: 19, column: 11 }, end: { line: 19, column: 25 } }, { start: { line: 19, column: 29 }, end: { line: 19, column: 31 } }], line: 19 } }, s: { '0': 0, '1': 0, '2': 0, '3': 0, '4': 0, '5': 0, '6': 0, '7': 0 }, f: { '0': 0, '1': 0 }, b: { '0': [0], '1': [0, 0, 0, 0, 0], '2': [0, 0], '3': [0, 0], '4': [0, 0] }, _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c' },coverage = global[gcv] || (global[gcv] = {});if (coverage[path] && coverage[path].hash === hash) {return coverage[path];}coverageData.hash = hash;return coverage[path] = coverageData;}();exports.default = (state = /* istanbul ignore next */(++cov_kpa4ff5wv.b[0][0], {}), action) => {/* istanbul ignore next */++cov_kpa4ff5wv.f[0];++cov_kpa4ff5wv.s[0];
  switch (action.type) {
    case 'ARTICLE_PAGE_LOADED': /* istanbul ignore next */++cov_kpa4ff5wv.b[1][0];{/* istanbul ignore next */++cov_kpa4ff5wv.s[1];
        return (/* istanbul ignore next */Object.assign({},
          state, {
            article: action.payload[0].article,
            comments: action.payload[1].comments }));

      }
    case 'ARTICLE_PAGE_UNLOADED': /* istanbul ignore next */++cov_kpa4ff5wv.b[1][1];{/* istanbul ignore next */++cov_kpa4ff5wv.s[2];
        return {};
      }
    case 'ADD_COMMENT': /* istanbul ignore next */++cov_kpa4ff5wv.b[1][2];{/* istanbul ignore next */++cov_kpa4ff5wv.s[3];
        return (/* istanbul ignore next */Object.assign({},
          state, {
            commentErrors: action.error ? /* istanbul ignore next */(++cov_kpa4ff5wv.b[2][0], action.payload.errors) : /* istanbul ignore next */(++cov_kpa4ff5wv.b[2][1], null),
            comments: action.error ? /* istanbul ignore next */(++cov_kpa4ff5wv.b[3][0],
            null) : /* istanbul ignore next */(++cov_kpa4ff5wv.b[3][1],
            ( /* istanbul ignore next */(++cov_kpa4ff5wv.b[4][0], state.comments) || /* istanbul ignore next */(++cov_kpa4ff5wv.b[4][1], [])).concat([action.payload.comment])) }));

      }
    case 'DELETE_COMMENT': /* istanbul ignore next */++cov_kpa4ff5wv.b[1][3];{
        const commentId = /* istanbul ignore next */(++cov_kpa4ff5wv.s[4], action.commentId); /* istanbul ignore next */++cov_kpa4ff5wv.s[5];
        return (/* istanbul ignore next */Object.assign({},
          state, {
            comments: state.comments.filter(comment => {/* istanbul ignore next */++cov_kpa4ff5wv.f[1];++cov_kpa4ff5wv.s[6];return comment.id !== commentId;}) }));

      }
    default: /* istanbul ignore next */++cov_kpa4ff5wv.b[1][4];{/* istanbul ignore next */++cov_kpa4ff5wv.s[7];
        return state;
      }}

};