'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _mongoose = require('mongoose');var _mongoose2 = _interopRequireDefault(_mongoose);
var _mongooseUniqueValidator = require('mongoose-unique-validator');var _mongooseUniqueValidator2 = _interopRequireDefault(_mongooseUniqueValidator);
var _slugify = require('slugify');var _slugify2 = _interopRequireDefault(_slugify);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}exports.default =

getArticleSchema;

function getArticleSchema(User) {
  const ArticleSchema = new _mongoose2.default.Schema(
  {
    slug: { type: String, lowercase: true, unique: true },
    title: String,
    description: String,
    body: String,
    favoritesCount: { type: Number, default: 0 },
    comments: [{ type: _mongoose2.default.Schema.Types.ObjectId, ref: 'Comment' }],
    tagList: [{ type: String }],
    author: { type: _mongoose2.default.Schema.Types.ObjectId, ref: 'User' } },

  { timestamps: true });


  ArticleSchema.plugin(_mongooseUniqueValidator2.default, { message: 'is already taken' });

  ArticleSchema.pre('validate', function (next) {
    this.slugify(); // eslint-disable-line babel/no-invalid-this

    next();
  });

  ArticleSchema.methods.slugify = function () {
    this.slug = (0, _slugify2.default)(this.title);
  };

  ArticleSchema.methods.updateFavoriteCount = function () {
    return User.count({ favorites: { $in: [this._id] } }).then(count => {
      this.favoritesCount = count;

      return this.save();
    });
  };

  ArticleSchema.methods.toJSONFor = function (user) {
    return {
      slug: this.slug,
      title: this.title,
      description: this.description,
      body: this.body,
      createdAt: this.createdAt,
      updatedAt: this.updatedAt,
      tagList: this.tagList,
      favorited: user ? user.isFavorite(this._id) : false,
      favoritesCount: this.favoritesCount,
      author: this.author ?
      this.author.toProfileJSONFor(user) :
      { username: 'userRemoved' } };

  };

  return ArticleSchema;
}