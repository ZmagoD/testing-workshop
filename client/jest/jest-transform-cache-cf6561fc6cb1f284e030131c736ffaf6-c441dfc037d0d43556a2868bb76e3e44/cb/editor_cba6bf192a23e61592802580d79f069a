/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var cov_1w8m9h4hfe = function () {var path = '/Users/zmagodevetak/Desktop/react/testing-workshop/client/src/reducers/editor.js',hash = '29605617fcbc8ded0a3f408e783366f1244f76bc',global = new Function('return this')(),gcv = '__coverage__',coverageData = { path: '/Users/zmagodevetak/Desktop/react/testing-workshop/client/src/reducers/editor.js', statementMap: { '0': { start: { line: 1, column: 21 }, end: { line: 8, column: 1 } }, '1': { start: { line: 10, column: 2 }, end: { line: 35, column: 3 } }, '2': { start: { line: 12, column: 6 }, end: { line: 19, column: 7 } }, '3': { start: { line: 21, column: 6 }, end: { line: 21, column: 25 } }, '4': { start: { line: 23, column: 6 }, end: { line: 27, column: 7 } }, '5': { start: { line: 29, column: 6 }, end: { line: 31, column: 7 } }, '6': { start: { line: 30, column: 8 }, end: { line: 30, column: 43 } }, '7': { start: { line: 32, column: 6 }, end: { line: 32, column: 18 } }, '8': { start: { line: 34, column: 6 }, end: { line: 34, column: 18 } } }, fnMap: { '0': { name: '(anonymous_0)', decl: { start: { line: 9, column: 15 }, end: { line: 9, column: 16 } }, loc: { start: { line: 9, column: 49 }, end: { line: 36, column: 1 } }, line: 9 } }, branchMap: { '0': { loc: { start: { line: 9, column: 16 }, end: { line: 9, column: 36 } }, type: 'default-arg', locations: [{ start: { line: 9, column: 24 }, end: { line: 9, column: 36 } }], line: 9 }, '1': { loc: { start: { line: 10, column: 2 }, end: { line: 35, column: 3 } }, type: 'switch', locations: [{ start: { line: 11, column: 4 }, end: { line: 19, column: 7 } }, { start: { line: 20, column: 4 }, end: { line: 21, column: 25 } }, { start: { line: 22, column: 4 }, end: { line: 27, column: 7 } }, { start: { line: 28, column: 4 }, end: { line: 32, column: 18 } }, { start: { line: 33, column: 4 }, end: { line: 34, column: 18 } }], line: 10 }, '2': { loc: { start: { line: 14, column: 21 }, end: { line: 14, column: 70 } }, type: 'cond-expr', locations: [{ start: { line: 14, column: 38 }, end: { line: 14, column: 65 } }, { start: { line: 14, column: 68 }, end: { line: 14, column: 70 } }], line: 14 }, '3': { loc: { start: { line: 15, column: 15 }, end: { line: 15, column: 65 } }, type: 'cond-expr', locations: [{ start: { line: 15, column: 32 }, end: { line: 15, column: 60 } }, { start: { line: 15, column: 63 }, end: { line: 15, column: 65 } }], line: 15 }, '4': { loc: { start: { line: 16, column: 21 }, end: { line: 16, column: 77 } }, type: 'cond-expr', locations: [{ start: { line: 16, column: 38 }, end: { line: 16, column: 72 } }, { start: { line: 16, column: 75 }, end: { line: 16, column: 77 } }], line: 16 }, '5': { loc: { start: { line: 17, column: 14 }, end: { line: 17, column: 63 } }, type: 'cond-expr', locations: [{ start: { line: 17, column: 31 }, end: { line: 17, column: 58 } }, { start: { line: 17, column: 61 }, end: { line: 17, column: 63 } }], line: 17 }, '6': { loc: { start: { line: 18, column: 17 }, end: { line: 18, column: 69 } }, type: 'cond-expr', locations: [{ start: { line: 18, column: 34 }, end: { line: 18, column: 64 } }, { start: { line: 18, column: 67 }, end: { line: 18, column: 69 } }], line: 18 }, '7': { loc: { start: { line: 26, column: 16 }, end: { line: 26, column: 59 } }, type: 'cond-expr', locations: [{ start: { line: 26, column: 31 }, end: { line: 26, column: 52 } }, { start: { line: 26, column: 55 }, end: { line: 26, column: 59 } }], line: 26 }, '8': { loc: { start: { line: 29, column: 6 }, end: { line: 31, column: 7 } }, type: 'if', locations: [{ start: { line: 29, column: 6 }, end: { line: 31, column: 7 } }, { start: { line: 29, column: 6 }, end: { line: 31, column: 7 } }], line: 29 } }, s: { '0': 0, '1': 0, '2': 0, '3': 0, '4': 0, '5': 0, '6': 0, '7': 0, '8': 0 }, f: { '0': 0 }, b: { '0': [0], '1': [0, 0, 0, 0, 0], '2': [0, 0], '3': [0, 0], '4': [0, 0], '5': [0, 0], '6': [0, 0], '7': [0, 0], '8': [0, 0] }, _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c' },coverage = global[gcv] || (global[gcv] = {});if (coverage[path] && coverage[path].hash === hash) {return coverage[path];}coverageData.hash = hash;return coverage[path] = coverageData;}();const defaultState = /* istanbul ignore next */(++cov_1w8m9h4hfe.s[0], {
  articleSlug: '',
  title: '',
  description: '',
  body: '',
  tagList: [],
  inProgress: false }); /* istanbul ignore next */exports.default =

(state = /* istanbul ignore next */(++cov_1w8m9h4hfe.b[0][0], defaultState), action) => {/* istanbul ignore next */++cov_1w8m9h4hfe.f[0];++cov_1w8m9h4hfe.s[1];
  switch (action.type) {
    case 'EDITOR_PAGE_LOADED': /* istanbul ignore next */++cov_1w8m9h4hfe.b[1][0];++cov_1w8m9h4hfe.s[2];
      return (/* istanbul ignore next */Object.assign({},
        state, {
          articleSlug: action.payload ? /* istanbul ignore next */(++cov_1w8m9h4hfe.b[2][0], action.payload.article.slug) : /* istanbul ignore next */(++cov_1w8m9h4hfe.b[2][1], ''),
          title: action.payload ? /* istanbul ignore next */(++cov_1w8m9h4hfe.b[3][0], action.payload.article.title) : /* istanbul ignore next */(++cov_1w8m9h4hfe.b[3][1], ''),
          description: action.payload ? /* istanbul ignore next */(++cov_1w8m9h4hfe.b[4][0], action.payload.article.description) : /* istanbul ignore next */(++cov_1w8m9h4hfe.b[4][1], ''),
          body: action.payload ? /* istanbul ignore next */(++cov_1w8m9h4hfe.b[5][0], action.payload.article.body) : /* istanbul ignore next */(++cov_1w8m9h4hfe.b[5][1], ''),
          tagList: action.payload ? /* istanbul ignore next */(++cov_1w8m9h4hfe.b[6][0], action.payload.article.tagList) : /* istanbul ignore next */(++cov_1w8m9h4hfe.b[6][1], []) }));

    case 'EDITOR_PAGE_UNLOADED': /* istanbul ignore next */++cov_1w8m9h4hfe.b[1][1];++cov_1w8m9h4hfe.s[3];
      return defaultState;
    case 'ARTICLE_SUBMITTED': /* istanbul ignore next */++cov_1w8m9h4hfe.b[1][2];++cov_1w8m9h4hfe.s[4];
      return (/* istanbul ignore next */Object.assign({},
        state, {
          inProgress: false,
          errors: action.error ? /* istanbul ignore next */(++cov_1w8m9h4hfe.b[7][0], action.payload.errors) : /* istanbul ignore next */(++cov_1w8m9h4hfe.b[7][1], null) }));

    case 'ASYNC_START': /* istanbul ignore next */++cov_1w8m9h4hfe.b[1][3];++cov_1w8m9h4hfe.s[5];
      if (action.subtype === 'ARTICLE_SUBMITTED') {/* istanbul ignore next */++cov_1w8m9h4hfe.b[8][0];++cov_1w8m9h4hfe.s[6];
        return (/* istanbul ignore next */Object.assign({}, state, { inProgress: true }));
      } else /* istanbul ignore next */{++cov_1w8m9h4hfe.b[8][1];}++cov_1w8m9h4hfe.s[7];
      return state;
    default: /* istanbul ignore next */++cov_1w8m9h4hfe.b[1][4];++cov_1w8m9h4hfe.s[8];
      return state;}

};